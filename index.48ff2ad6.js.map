{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7c7a5670558d5548.js","node_modules/@parcel/runtime-js/lib/runtime-5909600f3d8bb497.js","src/ts/nodes.ts","node_modules/@parcel/runtime-js/lib/runtime-d441494638075310.js","src/ts/Game.ts","src/ts/utils/random.ts","src/ts/Data.ts","src/ts/Question.ts","src/ts/ScoreCount.ts","src/ts/Timer.ts","src/ts/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gpNS7\\\":\\\"index.48ff2ad6.js\\\",\\\"2pwhO\\\":\\\"check.ec9e8a8a.svg\\\",\\\"j81vF\\\":\\\"cross.410ab416.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2pwhO\")).toString();","const checkSVG = new URL(\"../assets/svg/check.svg\", import.meta.url).href;\nconst crossSVG = new URL(\"../assets/svg/cross.svg\", import.meta.url).href;\n\n/* HTMLElements */\nexport const quizBox = document.getElementById(\"quizbox\") as HTMLElement;\nexport const questionText = document.getElementById(\"question\") as HTMLElement;\nexport const answersContainer = document.getElementById(\n\t\"answer-options\"\n) as HTMLElement;\nexport const answersNodes = [...answersContainer.children];\nexport const flagImage = document.getElementById(\n\t\"flagImage\"\n) as HTMLImageElement;\nexport const nextButton = document.getElementById(\"next\") as HTMLElement;\nexport const resultBox = document.getElementById(\"results\") as HTMLElement;\nexport const resultsTitle = document.getElementById(\n\t\"resultsTitle\"\n) as HTMLElement;\nexport const resultsText = document.getElementById(\n\t\"resultsCount\"\n) as HTMLElement;\nexport const tryAgainButton = document.getElementById(\n\t\"try-again\"\n) as HTMLElement;\nexport const timer = document.getElementById(\"timer\") as HTMLElement;\n\n/* SVGs */\nexport const checkIcon = new Image();\ncheckIcon.src = checkSVG;\ncheckIcon.classList.add(\"absolute\", \"top-0\", \"right-2\", \"bottom-0\", \"my-auto\");\nexport const xIcon = new Image();\nxIcon.src = crossSVG;\nxIcon.classList.add(\"absolute\", \"right-2\", \"top-0\", \"bottom-0\", \"my-auto\");\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"j81vF\")).toString();","import {\n\tquestionText,\n\tanswersContainer,\n\tanswersNodes,\n\tflagImage,\n\tnextButton,\n\tresultBox,\n\tresultsTitle,\n\tresultsText,\n\tcheckIcon,\n\txIcon,\n\tquizBox,\n\ttryAgainButton,\n} from \"./nodes\";\nimport { Data } from \"./Data\";\nimport { Question } from \"./Question\";\nimport { ScoreCount } from \"./ScoreCount\";\nimport { Timer } from \"./Timer\";\n\nexport class Game {\n\tdata: Data;\n\tquestion: Question;\n\tscoreCount: ScoreCount;\n\ttimer: Timer;\n\trestartGame: (regions: string[]) => void;\n\n\tconstructor(\n\t\tdata: Data,\n\t\tquestion: Question,\n\t\tscoreCount: ScoreCount,\n\t\ttimer: Timer,\n\t\trestartGame: (regions: string[]) => void\n\t) {\n\t\tthis.data = data;\n\t\tthis.question = question;\n\t\tthis.scoreCount = scoreCount;\n\t\tthis.timer = timer;\n\t\tthis.restartGame = restartGame;\n\t\tthis.addEventListeners();\n\t\tthis.printResults = this.printResults.bind(this);\n\t\tthis.updateScreen();\n\t}\n\n\tupdateScreen() {\n\t\tthis.printReset();\n\t\tthis.printQuestion();\n\t}\n\n\tprintReset() {\n\t\tanswersNodes.forEach((node) => {\n\t\t\tnode.classList.remove(\"Correct\", \"Wrong\");\n\t\t});\n\t\tanswersContainer.classList.remove(\"pointer-events-none\");\n\t\tquizBox.classList.remove(\"hidden\");\n\t\tresultBox.classList.add(\"hidden\");\n\t\tflagImage.classList.add(\"hidden\");\n\t\tnextButton.classList.add(\"hidden\");\n\t\tthis.timer.start(this.printResults);\n\t}\n\n\tprintResults(title: string) {\n\t\tquizBox.classList.add(\"hidden\");\n\t\tresultBox.classList.remove(\"hidden\");\n\t\tresultsTitle.innerText = title;\n\t\tresultsText.innerHTML = `You got <span class=\"text-green-600 text-xl\">${this.scoreCount.get()}</span> correct answers.`;\n\t}\n\n\tprintAnswerClick(element: HTMLElement, type: \"correct\" | \"wrong\") {\n\t\tif (type === \"correct\") {\n\t\t\telement.classList.add(\"Correct\");\n\t\t\telement.appendChild(checkIcon);\n\t\t\treturn;\n\t\t}\n\t\telement.classList.add(\"Wrong\");\n\t\telement.appendChild(xIcon);\n\t\tconst correctAnswer = answersNodes.find(\n\t\t\t(node) =>\n\t\t\t\tnode.innerHTML == this.question.country.name.common ||\n\t\t\t\tnode.innerHTML == this.question.country.capital[0]\n\t\t) as HTMLElement;\n\t\tcorrectAnswer.classList.add(\"Correct\");\n\t\tcorrectAnswer.appendChild(checkIcon);\n\t}\n\n\tprintQuestion() {\n\t\tquestionText.innerText = this.question.title;\n\t\tif (this.question.type === 0) {\n\t\t\tanswersNodes.forEach((item, index) => {\n\t\t\t\titem.innerHTML = this.question.answers[index].name.common;\n\t\t\t});\n\t\t} else if (this.question.type === 1) {\n\t\t\tanswersNodes.forEach((item, index) => {\n\t\t\t\titem.innerHTML = this.question.answers[index].capital[0];\n\t\t\t});\n\t\t} else if (this.question.type === 2) {\n\t\t\tflagImage.src = this.question.country.flags.png;\n\t\t\tflagImage.classList.replace(\"hidden\", \"block\");\n\t\t\tanswersNodes.forEach((item, index) => {\n\t\t\t\titem.innerHTML = this.question.answers[index].name.common;\n\t\t\t});\n\t\t}\n\t}\n\n\taddEventListeners() {\n\t\tconst controller = new AbortController();\n\t\tanswersContainer.addEventListener(\n\t\t\t\"click\",\n\t\t\t(ev) => {\n\t\t\t\tconst target = ev.target as HTMLElement;\n\t\t\t\tif (target === answersContainer) return;\n\t\t\t\tthis.timer.stop();\n\t\t\t\tanswersContainer.classList.add(\"pointer-events-none\");\n\t\t\t\tconst isCorrect = this.question.check(target);\n\t\t\t\tif (isCorrect) {\n\t\t\t\t\tthis.printAnswerClick(target, \"correct\");\n\t\t\t\t\tnextButton.classList.remove(\"hidden\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.printAnswerClick(target, \"wrong\");\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.printResults(\"Game Over\");\n\t\t\t\t\t}, 2500);\n\t\t\t\t}\n\t\t\t\tisCorrect && this.scoreCount.sum();\n\t\t\t},\n\t\t\t{\n\t\t\t\tsignal: controller.signal,\n\t\t\t}\n\t\t);\n\t\tnextButton.addEventListener(\n\t\t\t\"click\",\n\t\t\t(ev) => {\n\t\t\t\tthis.question.makeNewQuestion();\n\t\t\t\tthis.updateScreen();\n\t\t\t},\n\t\t\t{\n\t\t\t\tsignal: controller.signal,\n\t\t\t}\n\t\t);\n\t\ttryAgainButton.addEventListener(\n\t\t\t\"click\",\n\t\t\t(ev) => {\n\t\t\t\tcontroller.abort();\n\t\t\t\tthis.restartGame([\"america\"]);\n\t\t\t},\n\t\t\t{\n\t\t\t\tonce: true,\n\t\t\t}\n\t\t);\n\t}\n}\n","export const random = (min: number, max: number): 0 | 1 | 2 => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min) as 0 | 1 | 2;\n};\n","import { random } from \"./utils/random\";\n\nexport interface Country {\n\tname: {\n\t\tcommon: string;\n\t};\n\tcapital: string[];\n\tflags: {\n\t\talt: string;\n\t\tpng: string;\n\t\tsvg: string;\n\t};\n\tsubregion: string;\n}\n\nexport class Data {\n\tcountries: Country[] | null;\n\tregions: string[];\n\n\tconstructor(regions: string[]) {\n\t\tthis.regions = regions;\n\t\tthis.countries = null;\n\t}\n\n\tasync fetch(): Promise<Country[] | null> {\n\t\tconst API = `https://restcountries.com/v3.1/region/${\n\t\t\tthis.regions[random(0, this.regions.length - 1)]\n\t\t}?fields=name,capital,flags,subregion`;\n\t\ttry {\n\t\t\tconst response = await fetch(API);\n\t\t\tconst data = await response.json();\n\t\t\tthis.countries = data;\n\t\t\treturn data;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n","import { Country } from \"./Data\";\nimport { random } from \"./utils/random\";\n\nexport class Question {\n\ttype: 0 | 1 | 2;\n\tdata: Country[];\n\tcountry: Country;\n\tanswers: Country[];\n\ttitle: string;\n\n\tconstructor(data: Country[]) {\n\t\tthis.data = data;\n\t\tthis.country = this.selectCountry(this.data);\n\t\tthis.answers = this.makeAnswers(this.country, this.data);\n\t\tthis.type = random(0, 2);\n\t\tthis.title = this.makeQuestionTitle(this.country, this.type);\n\t}\n\n\tselectCountry(countries: Country[]): Country {\n\t\treturn countries[random(0, countries.length - 1)];\n\t}\n\n\tmakeQuestionTitle(country: Country, type: number): string {\n\t\tif (type === 0) {\n\t\t\treturn `${this.country.capital[0]} is the Capital of...`;\n\t\t} else if (type === 1) {\n\t\t\treturn `The Capital of ${this.country.name.common} is...`;\n\t\t}\n\t\treturn \"Which country does this flag belong to..?\";\n\t}\n\n\tmakeAnswers(selectedCountry: Country, countries: Country[]): Country[] {\n\t\tconst answers = countries.filter((country: Country) => {\n\t\t\tif (country.name.common === selectedCountry.name.common) return false;\n\t\t\treturn country.subregion === selectedCountry.subregion;\n\t\t});\n\n\t\twhile (answers.length > 3) {\n\t\t\tanswers.splice(random(0, answers.length), 1);\n\t\t}\n\t\tanswers.splice(random(0, 3), 0, selectedCountry);\n\t\treturn answers;\n\t}\n\n\tmakeNewQuestion() {\n\t\tthis.country = this.selectCountry(this.data);\n\t\tthis.answers = this.makeAnswers(this.country, this.data);\n\t\tthis.title = this.makeQuestionTitle(this.country, this.type);\n\t}\n\n\tcheck(element: HTMLElement) {\n\t\tconst clickedText = element.innerText;\n\t\tif (this.type === 0 || this.type === 2) {\n\t\t\tconst isCorrect = clickedText === this.country.name.common;\n\t\t\treturn isCorrect;\n\t\t}\n\t\tconst isCorrect = clickedText === this.country.capital[0];\n\t\treturn isCorrect;\n\t}\n}\n","export class ScoreCount {\n\t_correctCount: number;\n\n\tconstructor() {\n\t\tthis._correctCount = 0;\n\t}\n\n\tsum(): number {\n\t\treturn (this._correctCount += 1);\n\t}\n\tget(): number {\n\t\treturn this._correctCount;\n\t}\n}\n","import { timer } from \"./nodes\";\n\nexport class Timer {\n\t_secondsLeft: number;\n\t_interval: number;\n\n\tconstructor() {\n\t\tthis._secondsLeft = 15;\n\t\tthis._interval = 0;\n\t}\n\n\tstart(callback: (arg: string) => void): void {\n\t\tthis.reset();\n\t\tthis._interval = setInterval(() => {\n\t\t\tthis._secondsLeft--;\n\t\t\ttimer.innerText = this._secondsLeft.toString();\n\t\t\tif (this._secondsLeft === 0) {\n\t\t\t\tthis.stop();\n\t\t\t\tcallback(\"Time's Up!\");\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tstop(): void {\n\t\tif (this._interval) clearInterval(this._interval);\n\t}\n\n\treset(): void {\n\t\tthis.stop();\n\t\tthis._secondsLeft = 15;\n\t\ttimer.innerText = this._secondsLeft.toString();\n\t}\n}\n","import { Game } from \"./Game\";\nimport { Data } from \"./Data\";\nimport { Question } from \"./Question\";\nimport { ScoreCount } from \"./ScoreCount\";\nimport { Timer } from \"./Timer\";\n\nconst startGame = async (regions: string[]) => {\n\tconst data = new Data(regions);\n\tawait data.fetch();\n\tif (!data.countries) return;\n\tconst question = new Question(data.countries);\n\tconst scoreCount = new ScoreCount();\n\tconst timer = new Timer();\n\tconst game = new Game(data, question, scoreCount, timer, startGame);\n};\n\nstartGame([\"america\"]);\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$1d8443b6ded8e150$exports","URL","resolve","url","toString","$cb1cb79e71228a43$var$checkSVG","href","$4a757fc93a3e6d10$exports","$cb1cb79e71228a43$var$crossSVG","$cb1cb79e71228a43$export$8f4d5981663b06f0","document","getElementById","$cb1cb79e71228a43$export$500776a67ad9cd26","$cb1cb79e71228a43$export$15e42c79d89a97a6","$cb1cb79e71228a43$export$3b4305bceda7289e","children","$cb1cb79e71228a43$export$4fde9ba93fe113d7","$cb1cb79e71228a43$export$20141bf56c9254ea","$cb1cb79e71228a43$export$13b1c7b11ef01beb","$cb1cb79e71228a43$export$d40c171051e088ef","$cb1cb79e71228a43$export$b29d1f7d09e6ccf3","$cb1cb79e71228a43$export$f1cc906edb723e7b","$cb1cb79e71228a43$export$9dc4ecf953986f04","$cb1cb79e71228a43$export$1d8a03084661a191","Image","src","classList","add","$cb1cb79e71228a43$export$4d48f840957dea1b","$48f6c7b0f9ee5bd6$export$985739bfa5723e08","constructor","data","question","scoreCount","timer","restartGame","this","addEventListeners","printResults","bind","updateScreen","printReset","printQuestion","forEach","node","remove","start","title","innerText","innerHTML","get","printAnswerClick","element","type","appendChild","correctAnswer","find","country","name","common","capital","item","index","answers","flags","png","replace","controller","AbortController","addEventListener","ev","target","stop","isCorrect","check","setTimeout","sum","signal","makeNewQuestion","abort","once","$3f275a6e87135c86$export$4385e60b38654f68","min","max","Math","floor","random","$1f12a16566d2f89e$export$2d0294657ab35f1b","regions","countries","async","API","response","fetch","json","error","console","$ee4fb6793dfebeb7$export$38435c7d2fecd2f","selectCountry","makeAnswers","makeQuestionTitle","selectedCountry","filter","subregion","splice","clickedText","$244b442b5b32d395$export$287b5f27fa0eeb","_correctCount","$61cea5e56685a5dc$export$c57e9b2d8b9e4de","_secondsLeft","_interval","callback","reset","setInterval","clearInterval","$4aa1cd84f89e5a94$var$startGame"],"version":3,"file":"index.48ff2ad6.js.map"}